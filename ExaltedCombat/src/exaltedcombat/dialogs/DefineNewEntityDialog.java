package exaltedcombat.dialogs;

import exaltedcombat.events.*;

import java.awt.Color;

import javax.swing.*;
import javax.swing.event.*;

import resources.strings.*;

/**
 * Defines a dialog which can be used to define a new combat entity for
 * ExaltedCombat. The specifiable properties on this dialog are:
 * <ul>
 *  <li>The short name of the entity: {@link #getEntityName() getEntityName()}</li>
 *  <li>The color associated with the entity: {@link #getEntityColor() getEntityColor()}</li>
 * </ul>
 * The dialog will not allow for the user to accept an entity if it has
 * an empty string for its short name property.
 * <P>
 * Usually this dialog is intended to be used as a modal dialog and once the
 * dialog was closed by the user fetch the data from this dialog if the user
 * {@link #isAccepted() accepted} the entity definition (clicked the "Ok"
 * button).
 * <P>
 * This dialog is not intended to be reused once the user has closed it. To
 * display a new dialog: Create a new instance of this dialog.
 * <P>
 * Note that like most Swing components this component is not thread-safe and
 * can only be accessed from the AWT event dispatching thread.
 *
 * @author Kelemen Attila
 */
public class DefineNewEntityDialog extends JDialog {
    private static final long serialVersionUID = 4490670210228232047L;

    private static final LocalizedString BUTTON_CAPTION_OK = StringContainer.getDefaultString("BUTTON_CAPTION_OK");
    private static final LocalizedString BUTTON_CAPTION_CANCEL = StringContainer.getDefaultString("BUTTON_CAPTION_CANCEL");
    private static final LocalizedString SHORT_ENTITYNAME_CAPTION = StringContainer.getDefaultString("SHORT_ENTITYNAME_CAPTION");
    private static final LocalizedString ENTITYCOLOR_CAPTION = StringContainer.getDefaultString("ENTITYCOLOR_CAPTION");

    private boolean accepted;

    /**
     * Creates a new entity definition dialog with an empty short name entered.
     *
     * @param parent the {@code Frame} from which the dialog is displayed
     * @param modal specifies whether dialog blocks user input to other
     *   top-level windows when shown. If {@code true}, the modality type
     *   property is set to {@code DEFAULT_MODALITY_TYPE}, otherwise the dialog
     *   is modeless.
     */
    public DefineNewEntityDialog(JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        jOkButton.setText(BUTTON_CAPTION_OK.toString());
        jCancelButton.setText(BUTTON_CAPTION_CANCEL.toString());

        jEntityNameCaption.setText(SHORT_ENTITYNAME_CAPTION.toString());
        jEntityColorCaption.setText(ENTITYCOLOR_CAPTION.toString());

        this.accepted = false;
        getRootPane().setDefaultButton(jOkButton);

        jNameEdit.getDocument().addDocumentListener(new SimpleDocChangeListener() {
            @Override
            protected void onChange(DocumentEvent e) {
                jOkButton.setEnabled(!getEntityName().isEmpty());
            }
        });
    }

    /**
     * Checks whether the user accepted the new entity or not. The user can
     * accept the new entity by clicking the "Ok" button and cancel it by
     * closing this dialog by any other means (e.g.: clicking "Cancel").
     *
     * @return {@code true} if the user accepted the new entity, {@code false}
     *   otherwise
     */
    public boolean isAccepted() {
        return accepted;
    }

    /**
     * Returns the short name of the new entity entered by the user.
     *
     * @return the short name of the new entity entered by the user. This method
     *   never returns {@code null}.
     */
    public String getEntityName() {
        return jNameEdit.getText().trim();
    }

    /**
     * Returns the color associated with new entity. This color was picked by
     * the user.
     *
     * @return the color associated with new entity choosen by the user. This
     *   method never returns {@code null}.
     */
    public Color getEntityColor() {
        return jEntityColorChooser.getColor();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jEntityColorChooser = new javax.swing.JColorChooser();
        jPanel1 = new javax.swing.JPanel();
        jOkButton = new javax.swing.JButton();
        jCancelButton = new javax.swing.JButton();
        jNameEdit = new javax.swing.JTextField();
        jEntityNameCaption = new javax.swing.JLabel();
        jEntityColorCaption = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Define a new character");
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);

        jOkButton.setText("Ok");
        jOkButton.setEnabled(false);
        jOkButton.setPreferredSize(new java.awt.Dimension(75, 23));
        jOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOkButtonActionPerformed(evt);
            }
        });
        jPanel1.add(jOkButton);

        jCancelButton.setText("Cancel");
        jCancelButton.setPreferredSize(new java.awt.Dimension(75, 23));
        jCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(jCancelButton);

        jEntityNameCaption.setText("Name:");

        jEntityColorCaption.setText("Color:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jEntityNameCaption)
                .addContainerGap(582, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jNameEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jEntityColorCaption)
                .addContainerGap(584, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jEntityColorChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jEntityNameCaption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jNameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jEntityColorCaption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jEntityColorChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOkButtonActionPerformed
        if (!getEntityName().isEmpty()) {
            accepted = true;
            dispose();
        }
    }//GEN-LAST:event_jOkButtonActionPerformed

    private void jCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_jCancelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jCancelButton;
    private javax.swing.JLabel jEntityColorCaption;
    private javax.swing.JColorChooser jEntityColorChooser;
    private javax.swing.JLabel jEntityNameCaption;
    private javax.swing.JTextField jNameEdit;
    private javax.swing.JButton jOkButton;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
