package exaltedcombat.dialogs;

import javax.swing.*;
import org.jtrim.utils.ExceptionHelper;

/**
 * Defines a modal dialog with a single message text in its center.
 * The dialog does not have a header by default (i.e.: it is
 * {@link #setUndecorated(boolean) undecorated}). This dialog is intended to be
 * used to block a window from receiving input.
 * <P>
 * The message of this dialog can be set by the
 * {@link #setMessage(java.lang.String) setMessage(String)} method.
 * <P>
 * Note that like most Swing components this component is not thread-safe and
 * can only be accessed from the AWT event dispatching thread.
 *
 * @author Kelemen Attila
 */
public class BlockingMessageDialog extends JDialog {
    private static final long serialVersionUID = 4152272023684680314L;

    /**
     * Creates a new modal dialog with a given parent frame. The parent will be
     * blocked from access while this new dialog is shown.
     *
     * @param parent the parent dialog of this new dialog
     */
    public BlockingMessageDialog(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
    }

    /**
     * Sets the displayed message of this dialog. The message will be displayed
     * in the center of this dialog.
     *
     * @param message the message to be displayed on this dialog. This argument
     *   cannot be {@code null}.
     *
     * @throws NullPointerException thrown if the specified message is
     *   {@code null}
     */
    public void setMessage(String message) {
        ExceptionHelper.checkNotNullArgument(message, "message");
        jMessageText.setText(message);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMessageText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setUndecorated(true);

        jMessageText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jMessageText, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jMessageText, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jMessageText;
    // End of variables declaration//GEN-END:variables
}
