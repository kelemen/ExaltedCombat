package exaltedcombat.components;

import java.awt.Color;

import javax.swing.*;

/**
 * Defines a panel which contains a solid square on the left side of the panel
 * and a text label right to this square.
 * <P>
 * Note that like most Swing components this component is not thread-safe and
 * can only be accessed from the AWT event dispatching thread.
 *
 * @author Kelemen Attila
 */
public class ColorAndCaptionPanel extends JPanel {
    private static final long serialVersionUID = 6756551286860901541L;

    private final JPanel jColorPanel;

    /**
     * Creates a new panel with a {@code null} string as a label and an
     * unspecified color. Note that the initial color may depend on the current
     * Look and Feel.
     */
    public ColorAndCaptionPanel() {
        initComponents();

        this.jColorPanel = new JSolidPanel();
        this.jColorPanelHolder.add(jColorPanel);
    }

    /**
     * Sets the color associated with this panel (i.e.: the color of the square
     * on the right side of this panel).
     *
     * @param color the new color to be used. This color is allowed to be
     *   transparent. This argument cannot be {@code null}.
     *
     * @throws NullPointerException thrown if the specified color is
     *   {@code null}
     */
    public void setPanelColor(Color color) {
        jColorPanel.setBackground(color);
        jColorPanel.setOpaque(color.getAlpha() >= 0xFF);
    }

    /**
     * Sets the text of the label of this panel. The label can be found to the
     * right of the solid square on this panel.
     *
     * @param caption the new label to be displayed. This argument can be
     *   {@code null}, specifying {@code null} has the same effect as specifing
     *   {@code null} text value for a {@link JLabel} Swing component.
     */
    public void setPanelCaption(String caption) {
        jPanelCaption.setText(caption);
    }

    /**
     * Returns the label of this panel shown to the right of the solid square.
     *
     * @return the label of this panel. This method may return {@code null}
     *   if no label was specified or {@code null} was specified explicitly.
     */
    public String getPanelCaption() {
        return jPanelCaption.getText();
    }

    /**
     * Returns the color of the solid square on the left side of this panel.
     *
     * @return the color of the solid square on the left side of this panel.
     *   This method never returns {@code null} if the color was explicitly
     *   set by a call to {@link #setPanelColor(java.awt.Color) setPanelColor(Color)}
     *   method but may return {@code null} if it was not set. Although even
     *   if it was not set usually a non-null value will be returned.
     */
    public Color getPanelColor() {
        return jColorPanel.getBackground();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorPanelHolder = new javax.swing.JPanel();
        jPanelCaption = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(100, 20));

        jColorPanelHolder.setBackground(new java.awt.Color(0, 0, 0));
        jColorPanelHolder.setOpaque(false);
        jColorPanelHolder.setLayout(new java.awt.GridLayout(1, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jColorPanelHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelCaption, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jColorPanelHolder, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
            .addComponent(jPanelCaption, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jColorPanelHolder;
    private javax.swing.JLabel jPanelCaption;
    // End of variables declaration//GEN-END:variables
}
